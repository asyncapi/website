(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{"/PLq":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/getting-started/servers",function(){return n("XPcl")}])},"7ljp":function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n("q1tI"),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"===typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return(o.a.createElement(l.Provider,{value:t},e.children))},b="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return(o.a.createElement(o.a.Fragment,{},t))}},f=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),b=r,f=u["".concat(i,".").concat(b)]||u[b]||d[b]||a;return n?o.a.createElement(f,c(c({ref:t},l),{},{components:n})):o.a.createElement(f,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var a=n.length,i=new Array(a);i[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[b]="string"===typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},Ff2n:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}n.d(t,"a",(function(){return r}))},Qetd:function(e,t,n){"use strict";var r=Object.assign.bind(Object);e.exports=r,e.exports.default=e.exports},XPcl:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return f}));var r=n("wx14"),o=n("Ff2n"),a=n("q1tI"),i=n.n(a),c=n("7ljp"),s=(i.a.createElement,function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(c.b)("div",t)}}),l=s("CodeBlock"),p=s("Remember"),u=s("ChapterSuggestions"),b={},d="wrapper";function f(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(c.b)(d,Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"In the previous lesson, you learned how to create the definition of a simple ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/getting-started/hello-world"}),"Hello World application"),", so let's take it from there."),Object(c.b)("p",null,"In this article, you learn how to add ",Object(c.b)("inlineCode",{parentName:"p"},"servers")," to your AsyncAPI document. Adding and defining servers is useful because it specifies where and how to connect. The connection facilitates where to send and receive messages."),Object(c.b)(l,{highlightedLines:[5,6,7,8,9],mdxType:"CodeBlock"},"asyncapi: 2.1.0\ninfo:\n  title: Hello world application\n  version: '0.1.0'\nservers:\n  production:\n    url: broker.mycompany.com\n    protocol: amqp\n    description: This is \"My Company\" broker.\nchannels:\n  hello:\n    publish:\n      message:\n        payload:\n          type: string\n          pattern: '^hello .+$'"),Object(c.b)("p",null,"You added a new section called ",Object(c.b)("inlineCode",{parentName:"p"},"servers")," in your AsyncAPI document."),Object(c.b)("p",null,"You might have noticed that the example mentions ",Object(c.b)("inlineCode",{parentName:"p"},"amqp"),". This protocol is very common and was popularized by RabbitMQ (among others). You can use any protocol. For example, the most common are ",Object(c.b)("inlineCode",{parentName:"p"},"mqtt")," (widely adopted by the Internet of Things and mobile apps), ",Object(c.b)("inlineCode",{parentName:"p"},"kafka")," (popular for its streaming solution), ",Object(c.b)("inlineCode",{parentName:"p"},"ws")," (WebSockets are frequently used in browsers), and ",Object(c.b)("inlineCode",{parentName:"p"},"http")," (used in HTTP streaming APIs)."),Object(c.b)(p,{mdxType:"Remember"},Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"servers")," section defines where your application should connect to start sending and receiving messages. "),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"If you are using a ",Object(c.b)("a",{href:"https://dev.to/fmvilas/event-driven-architectures--asyncapi-db7",target:"_blank",className:"text-teal-600 font-medium hover:underline"},"broker-centric architecture")," such as Kafka or RabbitMQ, usually you specify the URL of the broker. "),Object(c.b)("li",{parentName:"ol"},"If you have the classic client-server model such as for REST APIs, then your ",Object(c.b)("inlineCode",{parentName:"li"},"server")," should be the URL of the server."))),Object(c.b)("h2",{id:"conclusion"},"Conclusion"),Object(c.b)("p",null,"Now you know where ",Object(c.b)("inlineCode",{parentName:"p"},"Hello world application")," app connects to, to start receiving ",Object(c.b)("inlineCode",{parentName:"p"},"hello {name}")," messages."),Object(c.b)("p",null,"In the next chapter, you'll learn how to add security requirements to a server."),Object(c.b)(u,{suggestions:[{href:"/docs/getting-started/security",title:"Security",description:"Define the security mechanisms your application accepts.",linkText:"Learn more about how to add security"}],mdxType:"ChapterSuggestions"}))}f.isMDXComponent=!0},wx14:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return r}))}},[["/PLq",0,1]]]);