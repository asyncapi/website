# It does magic only if there is package.json file in the root of the project
name: PR testing - if Node project

on:
  pull_request_target:
    types: [opened, reopened, synchronize, ready_for_review]
  push:
    branches: [master]

jobs:
  test-nodejs-pr:
    name: Test NodeJS PR - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, windows-latest]
    steps:
      - if: >
          !github.event.pull_request.draft && !(
            (github.actor == 'asyncapi-bot' && (
              startsWith(github.event.pull_request.title, 'ci: update of files from global .github repo') ||
              startsWith(github.event.pull_request.title, 'chore(release):')
            )) ||
            (github.actor == 'asyncapi-bot-eve' && (
              startsWith(github.event.pull_request.title, 'ci: update of files from global .github repo') ||
              startsWith(github.event.pull_request.title, 'chore(release):')
            )) ||
            (github.actor == 'allcontributors[bot]' &&
              startsWith(github.event.pull_request.title, 'docs: add')
            )
          )
        id: should_run
        name: Should Run
        run: echo "shouldrun=true" >> $GITHUB_ENV
        shell: bash

      - if: env.shouldrun == 'true'
        name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
        shell: bash

      - if: env.shouldrun == 'true'
        name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.number != '' && format('refs/pull/{0}/merge', github.event.pull_request.number) || github.ref }}

      - if: env.shouldrun == 'true'
        name: Check if Node.js project and has package.json
        id: packagejson
        run: test -e ./package.json && echo "exists=true" >> $GITHUB_ENV || echo "exists=false" >> $GITHUB_ENV
        shell: bash

      - if: env.packagejson == 'true'
        name: Install dependencies
        run: npm ci

      - if: env.packagejson == 'true'
        name: Run Tests
        run: npm test --if-present

      - if: env.packagejson == 'true' && matrix.os == 'ubuntu-latest'
        name: Run Linter
        run: npm run lint --if-present

      - if: env.packagejson == 'true'
        name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: ./coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
