name: Lighthouse CI

on:
  pull_request_target:
    branches:
      - master
    types: [opened, reopened, synchronize, ready_for_review]

jobs:
  lighthouse-ci:
    name: Lighthouse CI
    runs-on: ubuntu-latest

    steps:
      - if: >
          !github.event.pull_request.draft && !(
            github.actor == 'asyncapi-bot' || github.actor == 'allcontributors[bot]'
          )
        id: should_run
        name: Should Run
        run: echo "shouldrun=true" >> $GITHUB_ENV
        
      - if: env.shouldrun == 'true'
        uses: actions/checkout@v4

      - if: env.shouldrun == 'true'
        name: Await Netlify Preview
        uses: jakepartusch/wait-for-netlify-action@v1.4
        id: netlify
        with:
          site_name: asyncapi-website
          max_timeout: 600

      - if: env.shouldrun == 'true'
        name: Lighthouse Audit
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@10.1.0
        with:
          urls: |
            https://deploy-preview-${{ github.event.pull_request.number }}--asyncapi-website.netlify.app/
          configPath: ./.github/workflows/lighthouserc.json
          uploadArtifacts: false
          temporaryPublicStorage: true

      - if: env.shouldrun == 'true'
        name: Upload Lighthouse Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-results
          path: ./lighthouse-results
        continue-on-error: true
        retry: 3
        timeout-minutes: 10

      - if: env.shouldrun == 'true'
        name: Lighthouse Score Report
        id: lighthouse_score_report
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const links = ${{ steps.lighthouse_audit.outputs.links }}
            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))
            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'
            const comment = [
                `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for this PR:`,
                '| Category | Score |',
                '| --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                `| ${score(result['best-practices'])} Best Practices | ${result['best-practices']} |`,
                `| ${score(result.seo)} SEO | ${result.seo} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} |`
            ].join('\n')
            core.setOutput("comment", comment);

      - if: env.shouldrun == 'true'
        name: LightHouse Statistic Comment
        uses: marocchino/sticky-pull-request-comment@v2.8.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: lighthouse
          message: ${{ steps.lighthouse_score_report.outputs.comment }}
