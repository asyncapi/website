{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "JSON Schema for AsyncAPI tool discovery file.",
    "type": "object",
    "additionalProperties": false,
    "required": [
        "title",
        "filters"
    ],
    "properties": {
        "title": {
            "type": "string",
            "description": "Human-readable name of the tool that will be visible to people in the list of tools.",
            "examples": [
                "AsyncAPI Generator",
                "Cupid"
            ]
        },
        "description": {
            "type": "string",
            "description": "By default scripts read description of repository there project is stored. You can override this behaviour by providing custom description."
        },
        "links": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "websiteUrl": {
                    "type": "string",
                    "description": "You can provide URL to the website where your project hosts some demo or project landing page.",
                    "format": "uri"
                },
                "docsUrl": {
                    "type": "string",
                    "description": "You can provide URL to project documentation in case you have more than just a readme file.",
                    "format": "uri"
                },
               "repoUrl": {
                  "type": "string",
                  "description": "You can provide URL to project codebase in case you have more than one tool present inside single repository.",
                  "format": "uri"
                }
            }
        },
        "filters": {
            "type": "object",
            "additionalProperties": false,
            "required": [
                "categories"
            ],
            "properties": {
                "language": {
                    "type": "string",
                    "description": "Refers to the language that users can use in the 'runtime'. That is, for generators it should be the language that the generator generates, not the language the generator is written in, itself. But, for example, for Bundler library, even though it operates on YAML and JSON files, more important for users is the fact that the library is written in TypeScript as this information tells them if they can integrate this library into their 'runtime'. In other words, if users have TypeScript codebase and they would like to have a bundling mechanism, they need to know if they can integrate Bundler library into their TypeScript codebase. This property provides information if a user can use given library/script/API specifically in his code. If we forgot about some language then please add it through a pull request to AsyncAPI's 'website' repository.",
                    "anyOf": [
                        {
                            "type": "string",
                            "enum": [
                                "Go",
                                "Java",
                                "JavaScript",
                                "HTML",
                                "C/C++",
                                "C#",
                                "Python",
                                "TypeScript",
                                "Kotlin",
                                "Scala",
                                "Markdown",
                                "YAML",
                                "R",
                                "Rubby",
                                "Rust",
                                "Shell",
                                "Groovy"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "technology": {
                    "type": "array",
                    "description": "Provide a list of different technologies used in the tool. Put details useful for tool user and tool contributor.",
                    "items": {
                        "type": "string",
                        "anyOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "Node js",
                                    "Hermes",
                                    "React JS",
                                    ".NET",
                                    "ASP.NET",
                                    "Springboot",
                                    "AWS",
                                    "Docker",
                                    "Node-red",
                                    "Maven",
                                    "Saas",
                                    "Kubernetes-native",
                                    "Scala",
                                    "Azure",
                                    "Jenkins",
                                    "Flask"
                                ]
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "examples": [
                        "Express.js",
                        "Kafka"
                    ]
                },
                "categories": {
                    "type": "array",
                    "description": "Categories are used to group tools by different use case, like documentation or code generation. If have a list of fixed categories. If you use different one that your tool lands under \"other\" category. Feel free to add your category through a pull request to AsyncAPI website repository.",
                    "items": {
                        "type": "string",
                        "anyOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "api",
                                    "code-first",
                                    "code-generator",
                                    "converter",
                                    "directory",
                                    "documentation-generator",
                                    "editor",
                                    "ui-component",
                                    "dsl",
                                    "framework",
                                    "github-action",
                                    "mocking-and-testing",
                                    "validator",
                                    "compare-tool",
                                    "other",
                                    "cli",
                                    "bundler",
                                    "ide-extension"
                                ]
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "minItems": 1,
                    "examples": [
                        "api",
                          "code-first",
                          "code-generator",
                          "converter",
                          "directory",
                          "documentation-generator",
                          "editor",
                          "ui-component",
                          "dsl",
                          "framework",
                          "github-action",
                          "mocking-and-testing",
                          "validator",
                          "compare-tool",
                          "other",
                          "cli",
                          "bundler",
                          "ide-extension"
                    ]
                },
                "hasCommercial": {
                    "type": "boolean",
                    "description": "Indicate if your tool is open source or commercial offering, like SAAS for example",
                    "default": false
                }
            }
        }
    }
}